import "@/styles/globals.css";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import { type Metadata } from "next";
import { Geist } from "next/font/google";
import { ThemeProvider } from '@mui/material/styles';
import { TRPCReactProvider } from "@/trpc/react";
import theme from '../../theme';
import {NextIntlClientProvider, hasLocale} from 'next-intl';
import {notFound} from 'next/navigation';
import {routing} from '@/i18n/routing';
 
export const metadata: Metadata = {
  title: "Create T3 App",
  description: "Generated by create-t3-app",
  icons: [{ rel: "icon", url: "/favicon.ico" }],
};

const geist = Geist({
  subsets: ["latin"],
  variable: "--font-geist-sans",
});


export default async function RootLayout({
  children,
  params,
}: Readonly<{ children: React.ReactNode,   params: Promise<{locale: string}>; }>) {
    // Ensure that the incoming `locale` is valid
    const {locale} = await params;
    if (!hasLocale(routing.locales, locale)) {
      notFound();
    }
  return (
    <html lang={locale} className={`${geist.variable}`}>
      <body>
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <TRPCReactProvider>
              <NextIntlClientProvider>
                {children}
              </NextIntlClientProvider>
            </TRPCReactProvider>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
